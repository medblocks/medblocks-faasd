version: "3.7"
services:
  wal-listner:
    image: medblocks/wal-listner
    environment:
      WAIT_HOSTS: db:5432, openehr:8080
      WAIT_TIMEOUT: 300
      WAIT_AFTER: 5
      WAIT_SLEEP_INTERVAL: 5
    command: sh -c "/wait && /wal-listner -c /app/config.yml"
    volumes:
      - ./wal.yml:/app/config.yml
    depends_on: 
      - db
      - openehr
      - nats
  nats:
    image: docker.io/library/nats-streaming:0.11.2
    ports:
      - "4222:4222"
  openehr:
    image: "ehrbase/ehrbase:0.16.5"
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://db:5432/ehrbase"
      SPRING_DATASOURCE_USERNAME: ehrbase
      SPRING_DATASOURCE_PASSWORD: ehrbase
      SERVER_AQLCONFIG_USEJSQUERY: "false"
      SERVER_NODENAME: "localhost"
    depends_on:
      - db
    ports:
      - 5002:8080
  fhir:
    image: "tornadoalert/fhir:v5.4.1-nats"
    environment:
      spring.datasource.url: "jdbc:postgresql://db:5432/hapi"
      spring.datasource.username: hapi
      spring.datasource.password: hapi
      spring.datasource.driverClassName: org.postgresql.Driver
      hapi.fhir.subscription.resthook_enabled: "true"
      hapi.fhir.subscription.websocket_enabled: "true"
      hapi.fhir.client_id_strategy: ANY
      hapi.fhir.nats: "nats://nats:4222"
    depends_on: 
      - db
    ports:
      - 5001:8080
  db:
    image: postgres
    command: 
      - -c
      - max_replication_slots=10
      - -c
      - wal_level=logical
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432
  caddy:
    image: caddy:2.4.1
    ports:
      - "2019:2019"
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
  kratos-migrate:
    image: oryd/kratos:latest-sqlite
    environment:
      - DSN=postgres://kratos:kratos@db:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4
      - LOG_LEVEL=trace
      - SERVE_PUBLIC_BASE_URL={{BASE_URL}}/kratos/public/
      - SERVE_ADMIN_BASE_URL=http://kratos:4434/
      - SELFSERVICE_DEFAULT_BROWSER_RETURN_URL={{BASE_URL}}/auth/
      - SELFSERVICE_WHITELISTED_RETURN_URLS={{BASE_URL}}/auth/,https://google.com
      - SELFSERVICE_FLOWS_ERROR_UI_URL={{BASE_URL}}/auth/error
      - SELFSERVICE_FLOWS_SETTINGS_UI_URL={{BASE_URL}}/auth/settings
      - SELFSERVICE_FLOWS_RECOVERY_UI_URL={{BASE_URL}}/auth/recovery
      - SELFSERVICE_FLOWS_VERIFICATION_UI_URL={{BASE_URL}}/auth/verify
      - SELFSERVICE_FLOWS_VERIFICATION_AFTER_DEFAULT_BROWSER_RETURN_URL={{BASE_URL}}/auth/
      - SELFSERVICE_FLOWS_LOGOUT_AFTER_DEFAULT_BROWSER_RETURN_URL={{BASE_URL}}/auth/login
      - SELFSERVICE_FLOWS_LOGIN_UI_URL={{BASE_URL}}/auth/login
      - SELFSERVICE_FLOWS_REGISTRATION_UI_URL={{BASE_URL}}/auth/registration
    volumes:
      - type: bind
        source: ./kratos
        target: /etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    restart: on-failure
   
  
  kratos:
    depends_on:
      - kratos-migrate
    image:  oryd/kratos:latest-sqlite
    ports:
      - '4433:4433' # public
      - '4434:4434' # admin
    restart: unless-stopped
    environment:
      - DSN=postgres://kratos:kratos@db:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4
      - LOG_LEVEL=trace
      - SERVE_PUBLIC_BASE_URL={{BASE_URL}}/kratos/public/
      - SERVE_ADMIN_BASE_URL=http://kratos:4434/
      - SELFSERVICE_DEFAULT_BROWSER_RETURN_URL={{BASE_URL}}/auth/
      - SELFSERVICE_WHITELISTED_RETURN_URLS={{BASE_URL}}/auth,https://google.com
      - SELFSERVICE_FLOWS_ERROR_UI_URL={{BASE_URL}}/auth/error
      - SELFSERVICE_FLOWS_SETTINGS_UI_URL={{BASE_URL}}/auth/settings
      - SELFSERVICE_FLOWS_RECOVERY_UI_URL={{BASE_URL}}/auth/recovery
      - SELFSERVICE_FLOWS_VERIFICATION_UI_URL={{BASE_URL}}/auth/verify
      - SELFSERVICE_FLOWS_VERIFICATION_AFTER_DEFAULT_BROWSER_RETURN_URL={{BASE_URL}}/auth/
      - SELFSERVICE_FLOWS_LOGOUT_AFTER_DEFAULT_BROWSER_RETURN_URL={{BASE_URL}}/auth/login
      - SELFSERVICE_FLOWS_LOGIN_UI_URL={{BASE_URL}}/auth/login
      - SELFSERVICE_FLOWS_REGISTRATION_UI_URL={{BASE_URL}}/auth/registration
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier
    volumes:
      - type: bind
        source: ./kratos
        target: /etc/config/kratos
   

  hydra:
    image: oryd/hydra:v1.10.6
    ports:
      - "4444:4444" # Public port
      - "4445:4445" # Admin port
      - "5555:5555" # Port for hydra token user
    command:
      serve -c /etc/config/hydra/hydra.yml all --dangerous-force-http
    volumes:
      -
        type: bind
        source: ./hydra
        target: /etc/config/hydra
    environment:
      - DSN=postgres://hydra:hydra@db:5432/hydra?sslmode=disable&max_conns=20&max_idle_conns=4
      - URLS_SELF_ISSUER={{BASE_URL}}/hydra/public
      - URLS_CONSENT={{BASE_URL}}/auth/hydraconsent
      - URLS_LOGIN={{BASE_URL}}/auth/hydralogin
      - URLS_LOGOUT={{BASE_URL}}/auth/hydra/logout
    restart: unless-stopped
    depends_on:
      - hydra-migrate
   

  hydra-migrate:
    image: oryd/hydra:v1.10.6
    environment:
      - DSN=postgres://hydra:hydra@db:5432/hydra?sslmode=disable&max_conns=20&max_idle_conns=4
      - URLS_SELF_ISSUER={{BASE_URL}}/hydra/public
      - URLS_CONSENT={{BASE_URL}}/auth/hydraconsent
      - URLS_LOGIN={{BASE_URL}}/auth/hydralogin
      - URLS_LOGOUT={{BASE_URL}}/auth/hydra/logout
    command:
      migrate -c /etc/config/hydra/hydra.yml sql -e --yes
    volumes:
      -
        type: bind
        source: ./hydra
        target: /etc/config/hydra
    restart: on-failure
   

  medblocksauth:
    image: athulknair123/medblocks-auth:v1
    ports:
      -  '4455:3000'
    environment:
      - KRATOS_PUBLIC_URL=http://kratos:4433
      - KRATOS_ADMIN_URL=http://kratos:4434
      - KRATOS_BROWSER_URL={{BASE_URL}}/kratos/admin
      - BASE_URL={{BASE_URL}}/auth
      - HYDRA_ADMIN_URL=http://hydra:4445
   

  mailslurper:
    image: oryd/mailslurper:smtps-latest
    ports:
      - '4436:4436'
      - '4437:4437'
   

volumes: 
  db-data:
  caddy_data:
  caddy_config:


 
 
